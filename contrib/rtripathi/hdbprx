    * From: "Rohit Tripathi" <rohit.trip@gmail.com>
    * To: k4@listbox.com
    * Subject: proxy/clone hdb
    * Date: Thu, 25 Sep 2008 16:06:52 -0400

Hi,

I want to set up a server A that uses the same data as a production
hdb server B, without reading physical data off the disk.
Externally A should act like a hdb, while internally passing all calls
to B and returning the results.

I experimented with opening a handle to B and setting .z.pi on A to
pass everything on to that handle. Doesn't work.

Any ideas?

-Rohit

    * From: "Nugent, Daniel M" <daniel.m.nugent@bofasecurities.com>
    * To: k4@listbox.com
    * Subject: RE: [k4] proxy/clone hdb
    * Date: Thu, 25 Sep 2008 16:16:41 -0400

Try changing .z.pg instead. I believe .z.pi is only for stdin

daniel.m.nugent@bofasecurities.com

    *  From: Felix Lungu <felix.lungu@gmail.com>
    * To: k4@listbox.com
    * Subject: Re: [k4] proxy/clone hdb
    * Date: Sat, 4 Oct 2008 15:07:49 +0300

.z.pi is for something else.

use .z.pg to forward the calls to your real server.

felix

    * From: rohit.x.tripathi@jpmchase.com
    * To: k4@listbox.com
    * Subject: Re: [k4] proxy/clone hdb
    * Date: Mon, 6 Oct 2008 10:22:01 -0400

{Disclaimer: NOT THINKING}
1. Lets say server B has a way to gracefully shutdown under certain
circumstances (i.e. evaluation of hdb function results in error, but this
is hypothetical).
I want to avoid this from happening.
I can check for incoming "\\" or "exit 0" messages and avoid forwarding
them but cannnot predict if something else can cause B to die.

2. Consider the following:
B: running on 10000
A: running on 9999, and has .z.pg:{h:hopen `::10000; h x; hclose h;}
C: connects to A, and sends

q)h".z.pg:{h:hopen `::10000; h x}"

Is there a way to prevent someone who connects to A and sets,
.z.pg/.Q.f[x] or any random global on server B? One way would be to check
incoming messages for ":" or "::" and avoid forwarding them to B, so .z.pg
on A needs to be heavily modified to meet these requirements....
{/Disclaimer}

I guess, in simple terms I'm looking for a server A which serves as a
firewall for hdb B....where B need not be redesigned or changed in any
way...pardon me for not skimming through code.kx.com thoroughly, in case
an answer exists. Maybe a combo of .z.pw and heavy scrutiny in .z.pg?

If a straightforward solution exists, I'd like to take it a step further
and change B's port randomly every now and then so it remains unknown to
everyone but A (port scanners may not catch where B is running -- some
scans require root privileges -- so B's port will remain sufficiently
obscure, and accessible only through A)

    * From: "Simon Garland, Kx" <simon@kx.com>
    * To: k4@listbox.com
    * Subject: Re: [k4] proxy/clone hdb
    * Date: Mon, 6 Oct 2008 16:34:01 +0200

On 06.10.2008, at 16:22, rohit.x.tripathi@jpmchase.com wrote:

> If a straightforward solution exists, I'd like to take it a step
> further
> and change B's port randomly every now and then so it remains
> unknown to
> everyone but A (port scanners may not catch where B is running -- some
> scans require root privileges -- so B's port will remain sufficiently
> obscure, and accessible only through A)
>

how about once B has its connection to A it does a \p 0
the existing connections will stay
but nobody else can find it

    * From: "Rohit Tripathi" <rohit.trip@gmail.com>
    * To: k4@listbox.com
    * Subject: Re: [k4] proxy/clone hdb
    * Date: Wed, 8 Oct 2008 18:33:15 -0400

I think Simon's idea is great. The problem with assigning random ports
is that we can easily call .z.i for A and pass that to lsof -p to get
port info of B

On B's side:

q)\p 34567
q)

On A's side:

q).z.i / * you could guess A's pid other ways too * /
6017
q)h:hopen `::34567
q)

And it tells you where A is connecting to.

rohit @ ~
18:22:03 $ lsof -p 6017
q 6017 rohit 4u IPv4 287075 TCP
localhost.localdomain:54174->localhost.localdomain:34567 (ESTABLISHED)

If however, we set port to 0 on B, even knowing about an earlier
established connection won't (probably) be enough to cause mischief
(is port 54174 useful to a 3rd party, for example?)
